//===================================================
//
//授業その2[enemy.cpp]
//Author:KishimotoEiji
//
//===================================================

//********************************
//インクルード
//********************************
#include "enemy.h"

#include <stdio.h>
#include <stdlib.h>

/****************************** CEnemy ******************************/

//===================================================
//コンストラクタ
//===================================================
CEnemy::CEnemy()
{
	//メンバー変数をクリア
	m_nLife = 0;
	m_nAttack = 0;
}

//===================================================
//デストラクタ
//===================================================
CEnemy::~CEnemy()
{
	/* 処理無し */
}

//===================================================
//初期化
//===================================================
void CEnemy::Init()
{
	m_nLife = 0;
	m_nAttack = 0;
}

//===================================================
//終了
//===================================================
void CEnemy::Uninit()
{

}

//===================================================
//入力
//===================================================
void CEnemy::Input()
{
	//メッセージ
	printf("\n 《 敵のステータスを設定 》\n");

	printf("\n 体力         > ");	//体力
	scanf("%d", &m_nLife);

	printf(" 攻撃力       > ");	//攻撃力
	scanf("%d", &m_nAttack);
}

//===================================================
//出力
//===================================================
void CEnemy::Output()
{
	//メッセージ
	printf("\n 《 敵のステータスはこちら 》\n");

	printf("\n [ 体力 : %d /", m_nLife);	//体力
	printf(" 攻撃力 : %d /", m_nAttack);	//攻撃力
}

//===================================================
//敵の種類を選ぶ
//===================================================
CEnemy::ENEMY_TYPE CEnemy::SelectEnemyType()
{
	ENEMY_TYPE type = ENEMY_TYPE::NONE;	//タイプ選択用

	while (1)
	{
		//メッセージ
		printf("\n 《 生成する敵を選択 》");
		printf("\n [ %d ] 人型", ENEMY_TYPE::HUMAN);
		printf("\n [ %d ] 鳥型", ENEMY_TYPE::BIRD);
		printf("\n 番号を入力 > ");
		scanf("%d", &type);

		if ((type > ENEMY_TYPE::NONE) && (type < ENEMY_TYPE::MAX))
		{//範囲内
			break;
		}

		/* 範囲外 */

		//メッセージ
		printf("\n ※ 範囲外です。 ※");

		//Enter入力待ち
		printf("\n\n Press Enter");
		rewind(stdin);
		getchar();

		//画面をクリア
		system("cls");
	}
	
	return type;	//選択した番号を返す
}

//===================================================
//敵の数を設定
//===================================================
int CEnemy::SetNumEnemy()
{
	int nNumEnemy = 0;	//敵の数設定用

	while (1)
	{
		//メッセージ
		printf("\n 敵の数を入力( %d体まで ) > ", MAX_ENEMY);
		scanf("%d", &nNumEnemy);

		if ((nNumEnemy >= MIN_ENEMY) && (nNumEnemy <= MAX_ENEMY))
		{//範囲内
			break;
		}

		/* 範囲外 */

		//メッセージ
		printf("\n ※ 範囲外です。 ※");

		//Enter入力待ち
		printf("\n\n Press Enter");
		rewind(stdin);
		getchar();

		//画面をクリア
		system("cls");
	}

	return nNumEnemy;	//選択した番号を返す
}

/****************************** CEnemyHuman ******************************/

//===================================================
//コンストラクタ
//===================================================
CEnemyHuman::CEnemyHuman()
{
	//メンバー変数をクリア
	m_nSpeedWalk = 0;
}

//===================================================
//デストラクタ
//===================================================
CEnemyHuman::~CEnemyHuman()
{
	/* 処理無し */
}

//===================================================
//初期化
//===================================================
void CEnemyHuman::Init()
{
	//親クラスの初期化
	CEnemy::Init();

	//メンバー変数の初期化
	m_nSpeedWalk = 0;
}

//===================================================
//終了
//===================================================
void CEnemyHuman::Uninit()
{
	//親クラスの終了
	CEnemy::Uninit();
}

//===================================================
//入力
//===================================================
void CEnemyHuman::Input()
{
	//親クラスの入力
	CEnemy::Input();

	//歩くスピード
	printf(" 歩くスピード > ");
	scanf("%d", &m_nSpeedWalk);

	//画面をクリア
	system("cls");
}

//===================================================
//出力
//===================================================
void CEnemyHuman::Output()
{
	//親クラスの出力
	CEnemy::Output();

	//歩くスピード
	printf(" 歩くスピード : %d ]\n", m_nSpeedWalk);

	//Enter入力待ち
	printf("\n\n Press Enter");
	rewind(stdin);
	getchar();

	//画面をクリア
	system("cls");
}

/****************************** CEnemyBird ******************************/

//===================================================
//コンストラクタ
//===================================================
CEnemyBird::CEnemyBird()
{
	//メンバー変数をクリア
	m_nSpeedFly = 0;
}

//===================================================
//デストラクタ
//===================================================
CEnemyBird::~CEnemyBird()
{
	/* 処理無し */
}

//===================================================
//初期化
//===================================================
void CEnemyBird::Init()
{
	//親クラスの初期化
	CEnemy::Init();

	//メンバー変数の初期化
	m_nSpeedFly = 0;
}

//===================================================
//終了
//===================================================
void CEnemyBird::Uninit()
{
	//親クラスの終了
	CEnemy::Uninit();
}

//===================================================
//入力
//===================================================
void CEnemyBird::Input()
{
	//親クラスの入力
	CEnemy::Input();

	//飛行スピード
	printf(" 飛行スピード > ");
	scanf("%d", &m_nSpeedFly);

	//画面をクリア
	system("cls");
}

//===================================================
//出力
//===================================================
void CEnemyBird::Output()
{
	//親クラスの出力
	CEnemy::Output();

	//飛行スピード
	printf(" 飛行スピード : %d ]\n", m_nSpeedFly);

	//Enter入力待ち
	printf("\n\n Press Enter");
	rewind(stdin);
	getchar();

	//画面をクリア
	system("cls");
}